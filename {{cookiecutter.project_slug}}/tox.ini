[tox]
envlist = flake8, safety, mypy, docs, install, py3{8,9,10,11}
isolated_build = true

[gh-actions]
python =
    3.8: install, safety, py38
    3.9: install, safety, py39
    3.10: install, safety, py310
    3.11: flake8, install, safety, mpypy, docs, py311

[testenv]
# Define base for all test environments.
parallel_show_output = true

[testenv:flake8]
skip_install = True
deps=
    darglint
    flake8
    flake8-bandit
    flake8-black
    flake8-bugbear
    flake8-builtins
    flake8-comprehensions
    flake8-docstrings
    flake8-eradicate
    flake8-isort
    flake8-pytest-style
commands=
    flake8 {toxinidir}/src/{{cookiecutter.project_module}} {toxinidir}/tests {toxinidir}/setup.py

[testenv:safety]
deps=
    safety
commands=
    safety check --full-report

[testenv:mypy]
skip_install = True
deps=
    mypy
commands=
    mypy {toxinidir}/src/{{cookiecutter.project_module}}

[testenv:docs]
skip_install = True
deps=
    -r{toxinidir}/docs/requirements.txt
commands=
    mkdocs build --strict

[testenv:install]
skip_install = True
deps=
    hatch
    twine
commands=
    pip check {toxinidir}
    hatch build
    twine check {toxinidir}/dist/*

[testenv:py3{8,9,10,11}]
deps =
    pytest
    pytest-cov
    pytest-raises
commands =
    pytest --cov={{cookiecutter.project_module}} --cov-report=term {posargs}

################################################################################
# Testing tools configuration                                                  #
################################################################################

[pytest]
testpaths =
    tests
markers =
    raises

[coverage:paths]
source =
    src/{{cookiecutter.project_module}}
    */site-packages/{{cookiecutter.project_module}}

[coverage:run]
branch = true
parallel = true
omit =
    src/{{cookiecutter.project_module}}/_version.py

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
precision = 2
omit =
    src/{{cookiecutter.project_module}}/_version.py

[flake8]
max-line-length = 88
exclude =
    __init__.py
# The following conflict with `black` which is the more pedantic.
ignore =
    E203
    W503
    D202
# darglint
strictness = long
# TODO: Can also choose 'numpy'
docstring_style = google
