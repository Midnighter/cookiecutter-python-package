################################################################################
# Tool Configuration
################################################################################

[tool.hatch.envs.default]
skip-install = true

[tool.hatch.envs.test]
description = """
Test the instantiation of the cookiecutter template and run its test suite.
"""
dependencies = [
    "cookiecutter",
    "jinja2-strcase",
    "jinja2-time",
    "pytest",
]

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.12"]

[tool.hatch.envs.test.scripts]
run = "pytest {args}"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.black]
line-length = 88
target-version = ["py312"]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D107",  # 'Missing docstring in __init__' ignored because pydoclint wants us to document the class instead.
    "D203",  # '1 blank line required before class docstring' ignored because we want no blank line.
    "D212",  # 'Multi-line docstring summary should start at the first line' ignored because we want the summary to start on the second line.
    "D407",  # 'Missing dashed underline after section' ignored because Google style docstrings don't underline.
    "ANN002",  # 'Missing type annotation for {*args} in method'.
    "ANN003",  # 'Missing type annotation for {*kwargs} in method'.
    "ANN101",  # 'Missing type annotation for {self} in method'.
    "ANN102",  # 'Missing type annotation for {cls} in classmethod'.
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    "A001",
    "A002",
    "S101",  # 'Use of assert detected' ignored because we are using pytest.
    "INP001",  # 'Insecure input' ignored because we are testing.
    "ANN201",  # 'Missing type annotation for {return}' ignored because all tests return `None`.
    "S602",
    "S603",
    "S607",
]

[tool.ruff.lint.isort]
case-sensitive = true
lines-after-imports = 2
